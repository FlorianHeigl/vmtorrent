#!/bin/bash

usage()
{
    echo "usage: setup CONFIG_FILE"
    echo -e "\tCONFIG_FILE - contains parameters to be used in startup attempt"
    exit;
}

test_disk()
{
    REPS=3; 
    pushd /tmp
    F_SIZE=262144 
    B_SIZE=16384 
    I=`seq 1 $REPS`
    rm /tmp/disk_io.log
    for i in $I; do 
	(/usr/bin/time -f "%P" iozone -i 0 -s $F_SIZE -r $B_SIZE > /dev/null) 2>> /tmp/disk_io.log ; 
    done
    med_cutoff 5 /tmp/disk_io.log
    RET=$?
    popd
    if [ $RET -ne 0 ]; then
	echo "$HOSTNAME:setup: DISK IO SLOW"
	touch /tmp/DISK_IO_SLOW
	return 1
    else
	echo "$HOSTNAME:setup: DISK IO FINE"
	touch /tmp/DISK_IO_FINE
	return 0
    fi
}


# SCRIPT MAIN
if [ $# -ne 1 ]; then
    usage
fi

CONFIG_FILE="$1"
VERB_LEVEL="-v"

# LOAD THE PROFILE AND AND OWN THE DIRECTORIES
. ~/.profile
echo "$HOSTNAME:setup_disk: BEGIN"
if [ -f $CONFIG_FILE ]; then
    source $CONFIG_FILE
else
    echo "NO CONFIG FILE FOUND AT $CONFIG_FILE"
    exit 0
fi

# REPORT CURRENT MOUNT POINTS
echo "$HOSTNAME:setup_disk: REPORTING CURRENT MOUNT POINTS" 
df -h


# CHECK WHETHER DISK ALREADY SET UP
echo "$HOSTNAME:setup_disk: CHECKING IF DISK SETUP" 
echo "$HOSTNAME:setup_disk: df -h | grep $HOST_LOCAL_DIR" 
df -h | grep $HOST_LOCAL_DIR 
if [ `df -h | grep $HOST_LOCAL_DIR | wc -l` -eq 0 ]; then 
    echo "$HOSTNAME:setup_disk: $HOST_LOCAL_DIR NOT IMAGED, CREATING DIRECTORY"
    echo "$HOSTNAME:setup_disk: sudo mkdir -p $HOST_LOCAL_DIR"
    sudo mkdir -p $HOST_LOCAL_DIR

    # USING LOCAL DISK
    if [ "$USE_RAM_DISK" == "false" ]; then 
    	echo -e "$HOSTNAME:setup_disk: image local disk $HOST_LOCAL_DIR"

	echo "$HOSTNAME:setup_disk: TESTING DISK"
	test_disk

	echo "$HOSTNAME:setup_disk: sudo /usr/testbed/bin/mkextrafs $HOST_LOCAL_DIR"
	sudo /usr/testbed/bin/mkextrafs $HOST_LOCAL_DIR
	
    # USING RAM DISK
    else
    	echo -e "$HOSTNAME:setup_disk: image RAM disk $HOST_LOCAL_DIR"
	echo -e "$HOSTNAME:setup_disk: sudo mount -t tmpfs -o size=$RAMDISK_SIZE tmpfs $HOST_LOCAL_DIR"
	sudo mount -t tmpfs -o size=$RAMDISK_SIZE tmpfs $HOST_LOCAL_DIR
    fi

    # OWN THE DISK
    echo "$HOSTNAME:setup_disk: sudo chown -R `whoami`:VMTorrent $HOST_LOCAL_DIR"
    sudo chown -R `whoami`:VMTorrent $HOST_LOCAL_DIR

else
    echo "$HOSTNAME:setup_disk: $HOST_LOCAL_DIR ALREADY IMAGED"
fi


# CHECK WHETHER LDISK ALREADY SET UP
echo "$HOSTNAME:setup_disk: CHECKING IF LDISK SETUP" 
echo "$HOSTNAME:setup_disk: df -h | grep $HOST_LDISK_DIR" 
df -h | grep $HOST_LDISK_DIR 
if [ `df -h | grep $HOST_LDISK_DIR | wc -l` -eq 0 ]; then 
    echo "$HOSTNAME:setup_disk: $HOST_LDISK_DIR NOT IMAGED, CREATING DIRECTORY"
    echo "$HOSTNAME:setup_disk: sudo mkdir -p $HOST_LDISK_DIR"
    sudo mkdir -p $HOST_LDISK_DIR    

    echo "$HOSTNAME:setup_disk: TESTING DISK"
    test_disk

    echo -e "$HOSTNAME:setup_disk: image local disk $HOST_LDISK_DIR"    
    echo "$HOSTNAME:setup_disk: sudo /usr/testbed/bin/mkextrafs $HOST_LDISK_DIR"
    sudo /usr/testbed/bin/mkextrafs $HOST_LDISK_DIR
    
    # OWN THE DISK
    echo "$HOSTNAME:setup_disk: sudo chown -R `whoami`:VMTorrent $HOST_LDISK_DIR"
    sudo chown -R `whoami`:VMTorrent $HOST_LDISK_DIR
else
    echo "$HOSTNAME:setup_disk: $HOST_LDISK_DIR ALREADY IMAGED"
fi

echo "$HOSTNAME:setup_disk: END"


